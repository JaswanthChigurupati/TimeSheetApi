name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish

    - name: Build Docker image
      run: |
        docker build -t timesheetapi:latest -f timesheetapi/Dockerfile .
        docker tag timesheetapi:latest ghcr.io/${{ github.repository_owner }}/timesheetapi:latest

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      run: docker push ghcr.io/${{ github.repository_owner }}/timesheetapi:latest

  plan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: terraform

    - name: Upload plan artifact
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan
        path: terraform/tfplan

  deploy:
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download plan artifact
      uses: actions/download-artifact@v2
      with:
        name: terraform-plan
        path: terraform

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Apply
      run: terraform apply "terraform/tfplan"
      working-directory: terraform

    - name: Get AKS credentials
      run: az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }}

    - name: Deploy to AKS
      run: |
        kubectl set image deployment/timesheetapi timesheetapi=ghcr.io/${{ github.repository_owner }}/timesheetapi:latest
        kubectl rollout status deployment/timesheetapi
